/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Clases.Lista;
import Clases.Regla;
import java.util.LinkedList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rodrigo AB
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    //************************Variables Estaticas******************************
    static int cont;
    static int cant;
    int[][] m;
    DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();

    static int filaI;
    static int colI;

    static int filaF;
    static int colF;

    //*************************************************************************
    public Main() {
        initComponents();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setRowHeight(40);
        jTable1.setTableHeader(null);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuración"));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Tamaño: ");

        jButton1.setText("Generar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton7.setText("Punto Inicial");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Punto Final");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton2.setText("Cargar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Resolver Simple");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Resolver Diagonal");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Resolver con Distancia");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Resolver con Distancia + Diag");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel2.setText("Problema del Laberinto");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(59, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton6)))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 56, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // GENERAR TABLA
        try {
            cant = Integer.parseInt(jTextField1.getText());
            m = new int[cant][cant];
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setColumnCount(m.length);
            model.setRowCount(m.length);
            for (int i = 0; i < m.length; i++) {
                for (int j = 0; j < m.length; j++) {
                    jTable1.setValueAt(null, i, j);
                }
                jTable1.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ingrese solo números");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // CARGAR TABLA A MATRIZ
        for (int i = 0; i < m.length; i++) {
            for (int j = 0; j < m[0].length; j++) {
                if (jTable1.getValueAt(i, j) != null && !"".equals(jTable1.getValueAt(i, j).toString())) {
                    m[i][j] = Integer.parseInt(jTable1.getValueAt(i, j).toString());
                } else {
                    m[i][j] = 0;
                }
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // RESOLVER SIMPLE
        cont = 0;
        laberinto(m, filaI, colI, filaF, colF, 2);
        if (cont == 0) {
            JOptionPane.showMessageDialog(this, "No se encontro solución");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // RESOLVER DIAGONAL
        cont = 0;
        laberintoDiag(m, filaI, colI, filaF, colF, 2);
        if (cont == 0) {
            JOptionPane.showMessageDialog(this, "No se encontro solución");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // RESOLVER CON DISTANCIA SIMPLE
        cont = 0;
        laberinto2(m, filaI, colI, filaF, colF, 2);
        if (cont == 0) {
            JOptionPane.showMessageDialog(this, "No se encontro solución");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // RESOLVER CON DISTANCIA + DIAGONAL
        cont = 0;
        laberinto3(m, filaI, colI, filaF, colF, 2);
        if (cont == 0) {
            JOptionPane.showMessageDialog(this, "No se encontro solución");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // SELECCIONAR COORDENADAS INICIALES
        filaI = jTable1.getSelectedRow();
        colI = jTable1.getSelectedColumn();
        JOptionPane.showMessageDialog(this, "Punto Inicial: (" + (filaI + 1) + ',' + (colI + 1) + ')');
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // SELECCIONAR COORDENADAS FINALES
        filaF = jTable1.getSelectedRow();
        colF = jTable1.getSelectedColumn();
        JOptionPane.showMessageDialog(this, "Punto Final: (" + (filaF + 1) + ',' + (colF + 1) + ')');
    }//GEN-LAST:event_jButton8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    //**************METODOS PARA EL LABERINTO**********************************
    public boolean posValida(int[][] m, int i, int j) {
        return (i >= 0 && i < m.length && j >= 0 && j < m[i].length
                && m[i][j] == 0);
    }

    public float distancia(int f1, int c1, int f2, int c2) {
        return (float) Math.sqrt(((f1 - f2) * (f1 - f2)) + ((c1 - c2) * (c1 - c2)));
    }

    private void mostrarMatriz(int[][] m) {
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        for (int i = 0; i < m.length; i++) {
            for (int j = 0; j < m.length; j++) {
                if (m[i][j] == 0) {
                    jTable1.setValueAt(null, i, j);
                }else{
                    
                    if (m[i][j] == 1) {
                        jTable1.setValueAt("X", i, j);
                    } else {
                        jTable1.setValueAt(m[i][j], i, j);
                    }
                }
            }
            jTable1.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
    }

    //*************************LABERINTO SIMPLE********************************
    public void laberinto(int m[][], int i1, int j1, int i2, int j2, int paso) {
        m[i1][j1] = paso;
        if (i1 == i2 && j1 == j2) {
            mostrarMatriz(m);
            cont++;
            return;
        }
        LinkedList<Regla> L1 = reglasAplicables(m, i1, j1);
        while (!L1.isEmpty()) {
            Regla R = (Regla) L1.removeFirst();
            laberinto(m, R.fil, R.col, i2, j2, paso + 1);
            m[R.fil][R.col] = 0;
            if (cont != 0) {
                return;
            }
        }
    }

    public LinkedList<Regla> reglasAplicables(int m[][], int i,
            int j) {
        LinkedList<Regla> L1 = new LinkedList<>();
        if (posValida(m, i - 1, j)) {
            L1.add(new Regla(i - 1, j));
        }
        if (posValida(m, i, j + 1)) {
            L1.add(new Regla(i, j + 1));
        }
        if (posValida(m, i + 1, j)) {
            L1.add(new Regla(i + 1, j));
        }
        if (posValida(m, i, j - 1)) {
            L1.add(new Regla(i, j - 1));
        }
        return L1;
    }

    //*************************LABERINTO DIAGONAL********************************
    public void laberintoDiag(int m[][], int i1, int j1, int i2,
            int j2, int paso) {
        m[i1][j1] = paso;
        if (i1 == i2 && j1 == j2) {
            mostrarMatriz(m);
            cont++;
            return;
        }
        LinkedList<Regla> L1 = reglasAplicablesD(m, i1, j1);
        while (!L1.isEmpty()) {
            Regla R = (Regla) L1.removeFirst();
            laberintoDiag(m, R.fil, R.col, i2, j2, paso + 1);
            m[R.fil][R.col] = 0;
            if (cont != 0) {
                return;
            }
        }
    }

    public LinkedList<Regla> reglasAplicablesD(int m[][], int i,
            int j) {
        LinkedList<Regla> L1 = new LinkedList<>();
        if (posValida(m, i - 1, j)) {
            L1.add(new Regla(i - 1, j));
        }
        if (posValida(m, i - 1, j + 1)) {
            L1.add(new Regla(i - 1, j + 1));
        }
        if (posValida(m, i, j + 1)) {
            L1.add(new Regla(i, j + 1));
        }
        if (posValida(m, i + 1, j + 1)) {
            L1.add(new Regla(i + 1, j + 1));
        }
        if (posValida(m, i + 1, j)) {
            L1.add(new Regla(i + 1, j));
        }
        if (posValida(m, i + 1, j - 1)) {
            L1.add(new Regla(i + 1, j - 1));
        }
        if (posValida(m, i, j - 1)) {
            L1.add(new Regla(i, j - 1));
        }
        if (posValida(m, i - 1, j - 1)) {
            L1.add(new Regla(i - 1, j - 1));
        }
        
        return L1;
    }

    //********************LABERINTO DISTANCIA SIMPLE****************************
    public void laberinto2(int m[][], int i1, int j1, int i2, int j2, int paso) {
        m[i1][j1] = paso;
        if (i1 == i2 && j1 == j2) {
            mostrarMatriz(m);
            cont++;
            return;
        }
        Lista L1 = reglas2(m, i1, j1, i2, j2);
        while (!L1.LR.isEmpty()) {
            Regla R = (Regla) L1.LR.removeFirst();
            laberinto2(m, R.fil, R.col, i2, j2, paso + 1);
            m[R.fil][R.col] = 0;
            if (cont != 0) {
                return;
            }
        }
    }

    public Lista reglas2(int m[][], int i,
            int j, int i2, int j2) {
        Lista L1 = new Lista();
        if (posValida(m, i, j - 1)) {
            L1.insertarOrd(new Regla(i, j - 1, distancia(i, j - 1, i2, j2)));
        }
        if (posValida(m, i - 1, j)) {
            L1.insertarOrd(new Regla(i - 1, j, distancia(i - 1, j, i2, j2)));
        }
        if (posValida(m, i, j + 1)) {
            L1.insertarOrd(new Regla(i, j + 1, distancia(i, j + 1, i2, j2)));
        }
        if (posValida(m, i + 1, j)) {
            L1.insertarOrd(new Regla(i + 1, j, distancia(i + 1, j, i2, j2)));
        }
        return L1;
    }

    //*******************LABERINTO DISTANCIA DIAGONAL**************************
    public void laberinto3(int m[][], int i1, int j1, int i2, int j2, int paso) {
        m[i1][j1] = paso;
        if (i1 == i2 && j1 == j2) {
            mostrarMatriz(m);
            cont++;
            return;
        }
        Lista L1 = reglasD2(m, i1, j1, i2, j2);
        while (!L1.LR.isEmpty()) {
            Regla R = (Regla) L1.LR.removeFirst();
            laberinto3(m, R.fil, R.col, i2, j2, paso + 1);
            m[R.fil][R.col] = 0;
            if (cont != 0) {
                return;
            }
        }
    }

    public Lista reglasD2(int m[][], int i,
            int j, int i2, int j2) {
        Lista L1 = new Lista();
        if (posValida(m, i, j - 1)) {
            L1.insertarOrd(new Regla(i, j - 1, distancia(i, j - 1, i2, j2)));
        }
        if (posValida(m, i - 1, j)) {
            L1.insertarOrd(new Regla(i - 1, j, distancia(i - 1, j, i2, j2)));
        }
        if (posValida(m, i, j + 1)) {
            L1.insertarOrd(new Regla(i, j + 1, distancia(i, j + 1, i2, j2)));
        }
        if (posValida(m, i + 1, j)) {
            L1.insertarOrd(new Regla(i + 1, j, distancia(i + 1, j, i2, j2)));
        }
        if (posValida(m, i - 1, j - 1)) {
            L1.insertarOrd(new Regla(i - 1, j - 1, distancia(i - 1, j - 1, i2, j2)));
        }
        if (posValida(m, i - 1, j + 1)) {
            L1.insertarOrd(new Regla(i - 1, j + 1, distancia(i - 1, j + 1, i2, j2)));
        }
        if (posValida(m, i + 1, j + 1)) {
            L1.insertarOrd(new Regla(i + 1, j + 1, distancia(i + 1, j + 1, i2, j2)));
        }
        if (posValida(m, i + 1, j - 1)) {
            L1.insertarOrd(new Regla(i + 1, j - 1, distancia(i + 1, j - 1, i2, j2)));
        }
        return L1;
    }

    //*************************************************************************

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
